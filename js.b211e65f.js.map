{"version":3,"sources":["js/generateDeck/generateDeck.js","js/controlCpu/controlCpu.js","js/index.js"],"names":["palos","courtCards","translateCard","card","includes","distributeCard","deck","pop","generateDeck","_","forEach","e","i","push","value","stick","shuffle","players","generatePlayer","numPlayers","name","id","hand","down","bet","score","downCpuPlayer","cpu","calculateScore","Math","ceil","random","person","ases","element","makeCpuBet","generateLayout","divMesa","document","querySelector","length","div","createElement","className","innerHTML","appendChild","dom","askButton","getElementById","downButton","raiseButton","distributeButton","cpuPlayers","dealer","player","allPlayers","blackJack","winners","loosers","concat","makeHand","parent","textContent","showHand","lastElementChild","giveCard","remove","sortJSON","data","key","orden","sort","a","b","x","y","determinateWinner","cpus","scores","console","log","drop","alert","querySelectorAll","p","raiseBet","initGame","isGameFinished","howManyDown","cpuTurn","addEventListener"],"mappings":"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","file":"js.b211e65f.js","sourceRoot":"..\\src","sourcesContent":["const palos = ['H', 'D', 'S', 'C'];\r\nlet courtCards = ['A', 'J', 'Q', 'K'];\r\n/** @function translateCard\r\n * devuelve el valor de las figuras en el juego\r\n * @param card recibe una figura\r\n*/\r\nconst translateCard = (card) => {\r\n    if (courtCards.includes(card) && card != 'A'){\r\n        return 10;\r\n    }\r\n    else\r\n        return card;\r\n}\r\n\r\nconst distributeCard = (deck) => {\r\n    return deck.pop();\r\n}\r\n\r\n    /** @function generateDeck \r\n     * crea la baraja de cartas y la mezcla\r\n    */\r\nconst generateDeck = () => {\r\n    \r\n    let deck = [];\r\n    palos.forEach(e => {\r\n        for(let i = 2; i<=10; i++){\r\n        deck.push({\r\n            value: i,\r\n            stick: e\r\n        });\r\n        }\r\n        courtCards.forEach(i => {\r\n        deck.push({\r\n            value: i,\r\n            stick: e\r\n        });\r\n        })\r\n    });\r\n    \r\n    return _.shuffle(deck);\r\n}\r\n\r\n    export {generateDeck, translateCard, distributeCard};","import {translateCard} from '../generateDeck/generateDeck';\r\nlet players = [];\r\n\r\nconst generatePlayer = (numPlayers) => {\r\n    for(let i=2; i<=numPlayers+1; i++){\r\n        players.push({\r\n            name: `CPU ${i-1}`,\r\n            id: i,\r\n            hand: [],\r\n            down: false,\r\n            bet: 0,\r\n            score: 0\r\n        })\r\n    }\r\n    return players;\r\n}\r\n\r\nconst downCpuPlayer = (cpu) => {\r\n    let score = 0;\r\n    score += calculateScore(cpu);\r\n\r\n    if(score >= 21){\r\n        cpu.down = true;\r\n    }\r\n    else if(score >= 19){\r\n        const random = Math.ceil((Math.random() * 10) + 1);\r\n        if(random < 8 && random > 0);\r\n            cpu.down = true;\r\n    }\r\n    else if(score >= 16){\r\n        const random = Math.ceil((Math.random() * 3) + 1);\r\n        if(random == 1);\r\n            cpu.down = true;\r\n    }\r\n} \r\n\r\nconst calculateScore = (person) => { //intentar optimizar\r\n    let score = 0;\r\n    let ases = 0;\r\n    person.hand.forEach(element => {\r\n        if(translateCard(element.value) == 'A'){\r\n            ases++;\r\n            score += 11;\r\n        }\r\n        else score += translateCard(element.value)\r\n        \r\n        do {\r\n            if(score > 21 && ases > 0){\r\n                score -= 10;\r\n            }\r\n            ases--;\r\n        } while(ases > 0)\r\n    });\r\n\r\n    person.score = score;\r\n    return score;\r\n}\r\n\r\nconst makeCpuBet = (cpu) => {\r\n    let score = 0;\r\n    score += calculateScore(cpu);\r\n\r\n    if(score == 21){\r\n        return cpu.bet =  Math.ceil((Math.random() * 10) + 5);\r\n    }\r\n    else if(score >= 19){\r\n        return cpu.bet =  Math.ceil((Math.random() * 7) + 3);\r\n    }\r\n    else if(score >= 16 || score < 16){\r\n        return cpu.bet =  Math.ceil((Math.random() * 3) + 1);\r\n    }\r\n}\r\n\r\nconst generateLayout = () => {\r\n    let divMesa = document.querySelector('.players');\r\n\r\n    for(let i=0; i<players.length; i++){\r\n        let div = document.createElement('div');\r\n        div.className = `player cpu${(players[i].id) - 1}`;\r\n        div.innerHTML = `<p class=\"name${players[i].id}\">CPU ${players[i].id-1}(Jugador)</p>\r\n                         <p class=\"cpu${players[i].id}Wager\">Apuesta:</p>\r\n                         <div class=\"cpuHand\"></div>`;\r\n        divMesa.appendChild(div);\r\n    }\r\n\r\n}\r\n\r\nexport {generatePlayer, generateLayout, makeCpuBet, downCpuPlayer, calculateScore};","import {generateDeck, distributeCard} from './generateDeck/generateDeck';\r\nimport {generatePlayer, generateLayout, makeCpuBet, calculateScore, downCpuPlayer} from './controlCpu/controlCpu';\r\n\r\nconst dom = {\r\n    askButton: document.getElementById(\"askButton\"),\r\n    downButton: document.getElementById(\"downButton\"),\r\n    raiseButton: document.getElementById(\"raiseButton\"),\r\n    distributeButton: document.getElementById(\"distributeButton\")\r\n}\r\n\r\nconst cpuPlayers = generatePlayer(4);\r\nlet deck = generateDeck();\r\n\r\nlet dealer = {\r\n    name: 'Dealer',\r\n    id: 1,\r\n    hand: [],\r\n    score: 0,\r\n    bet: 0,\r\n    down: false\r\n};\r\n\r\nlet player = {\r\n    name: 'Player',\r\n    id: 0,\r\n    hand: [],\r\n    bet: 0,\r\n    score: 0,\r\n    down: false\r\n};\r\n\r\nlet allPlayers = [], blackJack = [], winners = [], loosers = [];\r\nallPlayers = allPlayers.concat(cpuPlayers, dealer, player);\r\n\r\nconst makeHand = (parent, person) => {\r\n    let div = document.createElement('div');\r\n    div.className = `card ${person.hand[(person.hand.length)-1].stick}`;\r\n    div.textContent = `${person.hand[(person.hand.length)-1].value}`;\r\n    parent.appendChild(div);\r\n}\r\n\r\n/** @function showHand \r\n * muestra la mano de los jugadores\r\n*/\r\nconst showHand = (person) => {\r\n    if (!person.down){ // si la persona se planto, no se le muestra mas cartas\r\n        if(person.id == 0){ // si es el jugador\r\n            let parent = document.querySelector('.playerHand');\r\n            makeHand(parent, person);\r\n        }\r\n\r\n        else if(person.id == 1){ // si es el jugador\r\n            let parent = document.querySelector('.cpuHand');\r\n            makeHand(parent, person);\r\n        }\r\n\r\n        else{\r\n            let parent = document.querySelector(`.cpu${(person.id) - 1}`);\r\n            parent = parent.lastElementChild;\r\n            makeHand(parent, person);\r\n        }\r\n    }\r\n}\r\n\r\n/** @function showHand \r\n * reparte cartas a los jugadores\r\n*/\r\nconst giveCard = (person) => {\r\n    if(deck.length > 0){\r\n        if (!person.down) // si la persona se planto no se le da mas cartas\r\n            person.hand.push(distributeCard(deck));\r\n    }\r\n    else {\r\n        dom.askButton.remove();\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Ordenar JSON por medio del valor de una de sus propiedades\r\n * @author Fernando Magrosoto V. (@fmagrosoto)\r\n * @example sortJSON(json, propiedad, el orden)\r\n * @licence MIT\r\n * @version 1.0\r\n * @copyleft 2016 - Fernando Magrosoto V.\r\n * \r\n */\r\nconst sortJSON = (data, key, orden) => {\r\n    return data.sort(function (a, b){\r\n        var x = a[key],\r\n        y = b[key];\r\n\r\n        if (orden === 'asc') {\r\n            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\r\n        }\r\n\r\n        if (orden === 'desc') {\r\n            return ((x > y) ? -1 : ((x < y) ? 1 : 0));\r\n        }\r\n    });\r\n}\r\n\r\nconst determinateWinner = (cpus, person, dealer) => {\r\n    cpus = cpus.concat(person, dealer)\r\n    let scores = sortJSON(cpus, 'score', 'desc');\r\n    console.log(scores)\r\n\r\n    while(scores.length > 0){\r\n        console.log(scores[0].id);\r\n        console.log(scores[0].score);\r\n        if(scores[0].score == 21 && scores[0].hand.length == 2){\r\n            blackJack.push(scores[0]);\r\n            scores = _.drop(scores);\r\n        }\r\n        else if(scores[0].score > 21 || scores[0].score < dealer.score){\r\n            loosers.push(scores[0]);\r\n            scores = _.drop(scores);\r\n        }\r\n        else if(scores[0].score >= dealer.score && scores[0].score < 21){\r\n            winners.push(scores[0]);\r\n            scores = _.drop(scores);\r\n        }\r\n        else {\r\n            alert('Ha ocurrido un error.');\r\n            scores = _.drop(scores);\r\n        }\r\n    }\r\n\r\n    let div = document.querySelectorAll('.cpuHand');\r\n    console.log(div)\r\n    div.forEach(element => {\r\n        element.className = \"showAll\"\r\n    })\r\n    \r\n\r\n    if(blackJack.length > 0){\r\n        blackJack.forEach(element => {\r\n            \r\n            let p = document.querySelector(`.name${element.id}`);\r\n            p.className += ' blackjack';\r\n            p.textContent += ` Gana (blackjack) Total: ${element.bet * 1.5}`; \r\n        })\r\n    }\r\n    \r\n    if(winners.length > 0){\r\n        winners.forEach(element => {\r\n            \r\n            let p = document.querySelector(`.name${element.id}`);\r\n            p.className += ' winner';\r\n            p.textContent += ` Gana Total: ${element.bet * 1}`;\r\n        })\r\n    }\r\n    \r\n    if(loosers.length > 0){\r\n        loosers.forEach(element => {\r\n            \r\n            let p = document.querySelector(`.name${element.id}`);\r\n            p.className += ' loosers';\r\n            p.textContent += ` Pierde Total: ${element.bet}`;\r\n        })\r\n    }\r\n}\r\n\r\nconst raiseBet = (person) => {\r\n    if (!person.down){ // si la persona se planto, no se le muestra mas cartas\r\n        if(person.id == 0){ // si es el jugador\r\n            document.querySelector('.wager').innerHTML = `Apuesta: ${(person.bet += 1)}`\r\n        }\r\n        else if(person.id == 1){ // si es el dealer\r\n            document.querySelector('.dealerWager').innerHTML = `Apuesta: ${makeCpuBet(person)}`\r\n        }\r\n\r\n        else{\r\n            document.querySelector(`.cpu${person.id}Wager`).innerHTML = `Apuesta: ${makeCpuBet(person)}`\r\n        }\r\n    }\r\n}\r\n\r\nconst initGame = () => {\r\n    giveCard(player);\r\n    showHand(player);\r\n    giveCard(player);\r\n    showHand(player);\r\n\r\n    for(let i = 0; i<cpuPlayers.length; i++){\r\n        giveCard(cpuPlayers[i]);\r\n        showHand(cpuPlayers[i]);\r\n        giveCard(cpuPlayers[i]);\r\n        showHand(cpuPlayers[i]);\r\n        raiseBet(cpuPlayers[i]);\r\n        downCpuPlayer(cpuPlayers[i]);\r\n    }\r\n\r\n    giveCard(dealer);\r\n    showHand(dealer);\r\n    raiseBet(dealer);\r\n    downCpuPlayer(dealer);\r\n}\r\n\r\nconst isGameFinished = () => {\r\n    let howManyDown = 0;\r\n\r\n    allPlayers.forEach(element => {\r\n        if(element.down) howManyDown++;\r\n    });\r\n\r\n    if(howManyDown == allPlayers.length) return true;\r\n    else return false;\r\n}\r\n\r\nconst cpuTurn = () => {\r\n    giveCard(dealer);\r\n    showHand(dealer);\r\n    raiseBet(dealer);\r\n    downCpuPlayer(dealer);\r\n    \r\n    for(let i = 0; i<cpuPlayers.length; i++){\r\n        giveCard(cpuPlayers[i]);\r\n        showHand(cpuPlayers[i]);\r\n        raiseBet(cpuPlayers[i]);\r\n        downCpuPlayer(cpuPlayers[i]);\r\n    }\r\n\r\n    if(isGameFinished()){\r\n        determinateWinner(cpuPlayers, player, dealer);\r\n    }\r\n}\r\n\r\ngenerateLayout();\r\ninitGame();\r\n\r\ndom.askButton.addEventListener('click', function(){\r\n    giveCard(player);\r\n    showHand(player);\r\n    cpuTurn();\r\n});\r\ndom.distributeButton.addEventListener('click', function(){\r\n    cpuTurn();\r\n    if(isGameFinished()){\r\n        dom.distributeButton.remove();\r\n    }\r\n});\r\ndom.raiseButton.addEventListener('click', function(){\r\n    raiseBet(player);\r\n});\r\n\r\ndom.downButton.addEventListener('click', function(){\r\n    player.down = true;\r\n    calculateScore(player)\r\n    document.querySelector('.hideElement').className = 'dealerButton';\r\n    dom.askButton.remove();\r\n});"]}